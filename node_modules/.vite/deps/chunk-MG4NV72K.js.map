{
  "version": 3,
  "sources": ["../../@mui/base/Tab/Tab.js", "../../@mui/base/Tab/tabClasses.js", "../../@mui/base/useTab/useTab.js", "../../@mui/base/utils/combineHooksSlotProps.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"action\", \"children\", \"disabled\", \"onChange\", \"onClick\", \"onFocus\", \"slotProps\", \"slots\", \"value\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\r\nimport { getTabUtilityClass } from './tabClasses';\r\nimport { useTab } from '../useTab';\r\nimport { useSlotProps } from '../utils';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    selected,\r\n    disabled\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', selected && 'selected', disabled && 'disabled']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getTabUtilityClass));\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\r\n *\r\n * API:\r\n *\r\n * - [Tab API](https://mui.com/base-ui/react-tabs/components-api/#tab)\r\n */\r\nconst Tab = /*#__PURE__*/React.forwardRef(function Tab(props, forwardedRef) {\r\n  var _slots$root;\r\n  const {\r\n      children,\r\n      disabled = false,\r\n      slotProps = {},\r\n      slots = {},\r\n      value\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const tabRef = React.useRef();\r\n  const handleRef = useForkRef(tabRef, forwardedRef);\r\n  const {\r\n    active,\r\n    highlighted,\r\n    selected,\r\n    getRootProps\r\n  } = useTab(_extends({}, props, {\r\n    rootRef: handleRef,\r\n    value\r\n  }));\r\n  const ownerState = _extends({}, props, {\r\n    active,\r\n    disabled,\r\n    highlighted,\r\n    selected\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const TabRoot = (_slots$root = slots.root) != null ? _slots$root : 'button';\r\n  const tabRootProps = useSlotProps({\r\n    elementType: TabRoot,\r\n    getSlotProps: getRootProps,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  return /*#__PURE__*/_jsx(TabRoot, _extends({}, tabRootProps, {\r\n    children: children\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * A ref for imperative actions. It currently only supports `focusVisible()` action.\r\n   */\r\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      focusVisible: PropTypes.func.isRequired\r\n    })\r\n  })]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Callback invoked when new value is being set.\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * The props used for each slot inside the Tab.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Tab.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * You can provide your own value. Otherwise, it falls back to the child position index.\r\n   */\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n} : void 0;\r\nexport { Tab };", "import { generateUtilityClass } from '../generateUtilityClass';\r\nimport { generateUtilityClasses } from '../generateUtilityClasses';\r\nconst COMPONENT_NAME = 'Tab';\r\nexport function getTabUtilityClass(slot) {\r\n  return generateUtilityClass(COMPONENT_NAME, slot);\r\n}\r\nexport const tabClasses = generateUtilityClasses(COMPONENT_NAME, ['root', 'selected', 'disabled']);", "'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { useTabsContext } from '../Tabs';\r\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\r\nimport { useCompoundItem } from '../useCompound';\r\nimport { useListItem } from '../useList';\r\nimport { useButton } from '../useButton';\r\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\r\nfunction tabValueGenerator(otherTabValues) {\r\n  return otherTabValues.size;\r\n}\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\r\n */\r\nfunction useTab(parameters) {\r\n  const {\r\n    value: valueParam,\r\n    rootRef: externalRef,\r\n    disabled = false,\r\n    id: idParam\r\n  } = parameters;\r\n  const tabRef = React.useRef(null);\r\n  const id = useId(idParam);\r\n  const {\r\n    value: selectedValue,\r\n    selectionFollowsFocus,\r\n    getTabPanelId\r\n  } = useTabsContext();\r\n  const tabMetadata = React.useMemo(() => ({\r\n    disabled,\r\n    ref: tabRef,\r\n    id\r\n  }), [disabled, tabRef, id]);\r\n  const {\r\n    id: value,\r\n    index,\r\n    totalItemCount: totalTabsCount\r\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\r\n  const {\r\n    getRootProps: getTabProps,\r\n    highlighted,\r\n    selected\r\n  } = useListItem({\r\n    item: value\r\n  });\r\n  const {\r\n    getRootProps: getButtonProps,\r\n    rootRef: buttonRefHandler,\r\n    active,\r\n    focusVisible,\r\n    setFocusVisible\r\n  } = useButton({\r\n    disabled,\r\n    focusableWhenDisabled: !selectionFollowsFocus,\r\n    type: 'button'\r\n  });\r\n  const handleRef = useForkRef(tabRef, externalRef, buttonRefHandler);\r\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\r\n  const getRootProps = (externalProps = {}) => {\r\n    const externalEventHandlers = extractEventHandlers(externalProps);\r\n    const getCombinedRootProps = combineHooksSlotProps(getTabProps, getButtonProps);\r\n    return _extends({}, externalProps, getCombinedRootProps(externalEventHandlers), {\r\n      role: 'tab',\r\n      'aria-controls': tabPanelId,\r\n      'aria-selected': selected,\r\n      id,\r\n      ref: handleRef\r\n    });\r\n  };\r\n  return {\r\n    getRootProps,\r\n    active,\r\n    focusVisible,\r\n    highlighted,\r\n    index,\r\n    rootRef: handleRef,\r\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\r\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\r\n    selected: selected || value === selectedValue,\r\n    setFocusVisible,\r\n    totalTabsCount\r\n  };\r\n}\r\nexport { useTab };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\n/**\r\n * Combines the two get*Props functions from Base UI hooks into one.\r\n * Useful when a hook uses two other hooks behind the scenes\r\n * (such as useSelect that depends on useList and useButton for its root slot).\r\n *\r\n * The resulting function will return the combined props.\r\n * They are merged from left to right, similarly to how Object.assign works.\r\n *\r\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\r\n * so its event handlers can call the previous handlers and act depending on its result.\r\n *\r\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\r\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\r\n */\r\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\r\n  return function getCombinedProps(external = {}) {\r\n    const firstResult = _extends({}, external, getFirstProps(external));\r\n    const result = _extends({}, firstResult, getSecondProps(firstResult));\r\n    return result;\r\n  };\r\n}"],
  "mappings": "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",
  "names": ["React", "Tab", "_jsx", "PropTypes"]
}

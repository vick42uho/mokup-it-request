{
  "version": 3,
  "sources": ["../../@mui/joy/SvgIcon/SvgIcon.js", "../../@mui/joy/SvgIcon/svgIconClasses.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\", \"size\", \"slots\", \"slotProps\"];\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { unstable_capitalize as capitalize } from '@mui/utils';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport useSlot from '../utils/useSlot';\r\nimport { getSvgIconUtilityClass } from './svgIconClasses';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    color,\r\n    size,\r\n    fontSize\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', color && color !== 'inherit' && `color${capitalize(color)}`, size && `size${capitalize(size)}`, fontSize && `fontSize${capitalize(fontSize)}`]\r\n  };\r\n  return composeClasses(slots, getSvgIconUtilityClass, {});\r\n};\r\nconst sizeMap = {\r\n  sm: 'xl',\r\n  md: 'xl2',\r\n  lg: 'xl3'\r\n};\r\nconst SvgIconRoot = styled('svg', {\r\n  name: 'JoySvgIcon',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({}, ownerState.instanceSize && {\r\n  '--Icon-fontSize': theme.vars.fontSize[sizeMap[ownerState.instanceSize]]\r\n}, ownerState.instanceFontSize && ownerState.instanceFontSize !== 'inherit' && {\r\n  '--Icon-fontSize': theme.vars.fontSize[ownerState.instanceFontSize]\r\n}, {\r\n  userSelect: 'none',\r\n  margin: 'var(--Icon-margin)',\r\n  width: '1em',\r\n  height: '1em',\r\n  display: 'inline-block',\r\n  // the <svg> will define the property that has `currentColor`\r\n  // for example heroicons uses fill=\"none\" and stroke=\"currentColor\"\r\n  fill: ownerState.hasSvgAsChild ? undefined : 'currentColor',\r\n  flexShrink: 0,\r\n  fontSize: `var(--Icon-fontSize, ${theme.vars.fontSize[sizeMap[ownerState.size]] || 'unset'})`\r\n}, ownerState.fontSize && ownerState.fontSize !== 'inherit' && {\r\n  fontSize: `var(--Icon-fontSize, ${theme.fontSize[ownerState.fontSize]})`\r\n}, !ownerState.htmlColor && _extends({\r\n  color: `var(--Icon-color, ${theme.vars.palette.text.icon})`\r\n}, ownerState.color === 'inherit' && {\r\n  color: 'inherit'\r\n}, ownerState.color !== 'inherit' && theme.vars.palette[ownerState.color] && {\r\n  color: `rgba(${theme.vars.palette[ownerState.color]?.mainChannel} / 1)`\r\n})));\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Avatar](https://mui.com/joy-ui/react-avatar/)\r\n *\r\n * API:\r\n *\r\n * - [SvgIcon API](https://mui.com/joy-ui/api/svg-icon/)\r\n */\r\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'JoySvgIcon'\r\n  });\r\n  const {\r\n      children,\r\n      className,\r\n      color,\r\n      component = 'svg',\r\n      fontSize,\r\n      htmlColor,\r\n      inheritViewBox = false,\r\n      titleAccess,\r\n      viewBox = '0 0 24 24',\r\n      size = 'md',\r\n      slots = {},\r\n      slotProps = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\r\n  const ownerState = _extends({}, props, {\r\n    color,\r\n    component,\r\n    size,\r\n    instanceSize: inProps.size,\r\n    fontSize,\r\n    instanceFontSize: inProps.fontSize,\r\n    inheritViewBox,\r\n    viewBox,\r\n    hasSvgAsChild\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const externalForwardedProps = _extends({}, other, {\r\n    component,\r\n    slots,\r\n    slotProps\r\n  });\r\n  const [SlotRoot, rootProps] = useSlot('root', {\r\n    ref,\r\n    className: clsx(classes.root, className),\r\n    elementType: SvgIconRoot,\r\n    externalForwardedProps,\r\n    ownerState,\r\n    additionalProps: _extends({\r\n      color: htmlColor,\r\n      focusable: false\r\n    }, titleAccess && {\r\n      role: 'img'\r\n    }, !titleAccess && {\r\n      'aria-hidden': true\r\n    }, !inheritViewBox && {\r\n      viewBox\r\n    }, hasSvgAsChild && children.props)\r\n  });\r\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\r\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\r\n      children: titleAccess\r\n    }) : null]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * Node passed into the SVG element.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'inherit', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The theme's fontSize applied to the icon that will override the `size` prop.\r\n   * Use this prop when you want to use a specific font-size from the theme.\r\n   */\r\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'lg', 'md', 'sm', 'xl', 'xl2', 'xl3', 'xl4', 'xs']), PropTypes.string]),\r\n  /**\r\n   * Applies a color attribute to the SVG element.\r\n   */\r\n  htmlColor: PropTypes.string,\r\n  /**\r\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\r\n   * prop will be ignored.\r\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\r\n   * `component`'s viewBox to the root node.\r\n   * @default false\r\n   */\r\n  inheritViewBox: PropTypes.bool,\r\n  /**\r\n   * The shape-rendering attribute. The behavior of the different options is described on the\r\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\n   * If you are having issues with blurry icons you should investigate this prop.\r\n   */\r\n  shapeRendering: PropTypes.string,\r\n  /**\r\n   * The size of the component.\r\n   * @default 'md'\r\n   */\r\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * Provides a human-readable title for the element that contains it.\r\n   * https://www.w3.org/TR/SVG-access/#Equivalent\r\n   */\r\n  titleAccess: PropTypes.string,\r\n  /**\r\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\r\n   * For example, if the SVG element is 500 (width) by 200 (height),\r\n   * and you pass viewBox=\"0 0 50 20\",\r\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\r\n   * to bottom right (50,20) and each unit will be worth 10px.\r\n   * @default '0 0 24 24'\r\n   */\r\n  viewBox: PropTypes.string\r\n} : void 0;\r\nexport default SvgIcon;", "import { generateUtilityClass, generateUtilityClasses } from '../className';\r\nexport function getSvgIconUtilityClass(slot) {\r\n  return generateUtilityClass('MuiSvgIcon', slot);\r\n}\r\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorInherit', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorSuccess', 'colorWarning', 'fontSizeInherit', 'fontSizeXs', 'fontSizeSm', 'fontSizeMd', 'fontSizeLg', 'fontSizeXl', 'fontSizeXl2', 'fontSizeXl3', 'fontSizeXl4', 'sizeSm', 'sizeMd', 'sizeLg']);\r\nexport default svgIconClasses;"],
  "mappings": "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",
  "names": ["SvgIcon", "_jsxs", "_jsx", "PropTypes"]
}

{
  "version": 3,
  "sources": ["../../@mui/joy/RadioGroup/RadioGroup.js", "../../@mui/joy/RadioGroup/radioGroupClasses.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"className\", \"component\", \"children\", \"name\", \"defaultValue\", \"disableIcon\", \"overlay\", \"value\", \"onChange\", \"color\", \"variant\", \"size\", \"orientation\", \"role\", \"slots\", \"slotProps\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_capitalize as capitalize, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { styled, useThemeProps } from '../styles';\r\nimport { getRadioGroupUtilityClass } from './radioGroupClasses';\r\nimport RadioGroupContext from './RadioGroupContext';\r\nimport FormControlContext from '../FormControl/FormControlContext';\r\nimport useSlot from '../utils/useSlot';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    orientation,\r\n    size,\r\n    variant,\r\n    color\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', orientation, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\r\n  };\r\n  return composeClasses(slots, getRadioGroupUtilityClass, {});\r\n};\r\nconst RadioGroupRoot = styled('div', {\r\n  name: 'JoyRadioGroup',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})(({\r\n  ownerState,\r\n  theme\r\n}) => _extends({}, ownerState.size === 'sm' && {\r\n  '--RadioGroup-gap': '0.625rem'\r\n}, ownerState.size === 'md' && {\r\n  '--RadioGroup-gap': '0.875rem'\r\n}, ownerState.size === 'lg' && {\r\n  '--RadioGroup-gap': '1.25rem'\r\n}, {\r\n  display: 'flex',\r\n  margin: 'var(--unstable_RadioGroup-margin)',\r\n  flexDirection: ownerState.orientation === 'horizontal' ? 'row' : 'column',\r\n  borderRadius: theme.vars.radius.sm\r\n}, theme.variants[ownerState.variant]?.[ownerState.color]));\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Radio](https://mui.com/joy-ui/react-radio-button/)\r\n *\r\n * API:\r\n *\r\n * - [RadioGroup API](https://mui.com/joy-ui/api/radio-group/)\r\n */\r\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'JoyRadioGroup'\r\n  });\r\n  const {\r\n      className,\r\n      component,\r\n      children,\r\n      name: nameProp,\r\n      defaultValue,\r\n      disableIcon = false,\r\n      overlay,\r\n      value: valueProp,\r\n      onChange,\r\n      color = 'neutral',\r\n      variant = 'plain',\r\n      size: sizeProp = 'md',\r\n      orientation = 'vertical',\r\n      role = 'radiogroup',\r\n      slots = {},\r\n      slotProps = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const [value, setValueState] = useControlled({\r\n    controlled: valueProp,\r\n    default: defaultValue,\r\n    name: 'RadioGroup'\r\n  });\r\n  const formControl = React.useContext(FormControlContext);\r\n  const size = inProps.size || formControl?.size || sizeProp;\r\n  const ownerState = _extends({\r\n    orientation,\r\n    size,\r\n    variant,\r\n    color,\r\n    role\r\n  }, props);\r\n  const classes = useUtilityClasses(ownerState);\r\n  const name = useId(nameProp);\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const registerEffect = formControl?.registerEffect;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useEffect(() => {\r\n      if (registerEffect) {\r\n        return registerEffect();\r\n      }\r\n      return undefined;\r\n    }, [registerEffect]);\r\n  }\r\n  const contextValue = React.useMemo(() => ({\r\n    disableIcon,\r\n    overlay,\r\n    orientation,\r\n    size,\r\n    name,\r\n    value,\r\n    onChange: event => {\r\n      setValueState(event.target.value);\r\n      if (onChange) {\r\n        onChange(event);\r\n      }\r\n    }\r\n  }), [disableIcon, name, onChange, overlay, orientation, setValueState, size, value]);\r\n  const [SlotRoot, rootProps] = useSlot('root', {\r\n    ref,\r\n    className: clsx(classes.root, className),\r\n    elementType: RadioGroupRoot,\r\n    externalForwardedProps: _extends({}, other, {\r\n      component,\r\n      slots,\r\n      slotProps\r\n    }),\r\n    ownerState,\r\n    additionalProps: {\r\n      as: component,\r\n      role,\r\n      // The `id` is just for the completeness, it does not have any effect because RadioGroup (div) is non-labelable element\r\n      // MDN: \"If it is not a labelable element, then the for attribute has no effect\"\r\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#attr-for\r\n      id: formControl?.htmlFor,\r\n      'aria-labelledby': formControl?.labelId,\r\n      'aria-describedby': formControl?.['aria-describedby']\r\n    }\r\n  });\r\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\r\n    value: contextValue,\r\n    children: /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\r\n      children: /*#__PURE__*/_jsx(FormControlContext.Provider, {\r\n        value: undefined,\r\n        children: React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, _extends({}, index === 0 && {\r\n          'data-first-child': ''\r\n        }, index === React.Children.count(children) - 1 && {\r\n          'data-last-child': ''\r\n        }, {\r\n          'data-parent': 'RadioGroup'\r\n        })) : child)\r\n      })\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Class name applied to the root element.\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * @default 'neutral'\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'primary', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\r\n  defaultValue: PropTypes.any,\r\n  /**\r\n   * The radio's `disabledIcon` prop. If specified, the value is passed down to every radios under this element.\r\n   * @default false\r\n   */\r\n  disableIcon: PropTypes.bool,\r\n  /**\r\n   * The name used to reference the value of the control.\r\n   * If you don't provide this prop, it falls back to a randomly generated name.\r\n   */\r\n  name: PropTypes.string,\r\n  /**\r\n   * Callback fired when a radio button is selected.\r\n   *\r\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (string).\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * The component orientation.\r\n   * @default 'vertical'\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  /**\r\n   * The radio's `overlay` prop. If specified, the value is passed down to every radios under this element.\r\n   * @default false\r\n   */\r\n  overlay: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\r\n  /**\r\n   * The size of the component.\r\n   * @default 'md'\r\n   */\r\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * Value of the selected radio button. The DOM API casts this to a string.\r\n   */\r\n  value: PropTypes.any,\r\n  /**\r\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\r\n   * @default 'plain'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\r\n} : void 0;\r\nexport default RadioGroup;", "import { generateUtilityClass, generateUtilityClasses } from '../className';\r\nexport function getRadioGroupUtilityClass(slot) {\r\n  return generateUtilityClass('MuiRadioGroup', slot);\r\n}\r\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorSuccess', 'colorWarning', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid', 'sizeSm', 'sizeMd', 'sizeLg', 'horizontal', 'vertical']);\r\nexport default radioGroupClasses;"],
  "mappings": "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",
  "names": ["RadioGroup", "_jsx", "PropTypes"]
}

{
  "version": 3,
  "sources": ["../../@mui/joy/styles/styleUtils.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\n/**\r\n * internal utility\r\n *\r\n * Why? to read `sx` values and attach component's CSS variables\r\n *      e.g. <Card sx={{ borderRadius: 0 }} /> should attach\r\n *          `--Card-radius: 0px` so that developers don't have to remember\r\n *\r\n * Why not reuse `styleFunctionSx`?\r\n *     `styleFunctionSx` is more expensive as it iterates over all the keys\r\n */\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const resolveSxValue = ({\r\n  theme,\r\n  ownerState\r\n}, keys) => {\r\n  let sxObject = {};\r\n  function resolveSx(sxProp) {\r\n    if (typeof sxProp === 'function') {\r\n      const result = sxProp(theme);\r\n      resolveSx(result);\r\n    } else if (Array.isArray(sxProp)) {\r\n      sxProp.forEach(sxItem => {\r\n        if (typeof sxItem !== 'boolean') {\r\n          resolveSx(sxItem);\r\n        }\r\n      });\r\n    } else if (typeof sxProp === 'object') {\r\n      sxObject = _extends({}, sxObject, sxProp);\r\n    }\r\n  }\r\n  if (ownerState.sx) {\r\n    resolveSx(ownerState.sx);\r\n    keys.forEach(key => {\r\n      const value = sxObject[key];\r\n      if (typeof value === 'string' || typeof value === 'number') {\r\n        if (key === 'borderRadius') {\r\n          if (typeof value === 'number') {\r\n            sxObject[key] = `${value}px`;\r\n          } else {\r\n            sxObject[key] = theme.vars?.radius[value] || value;\r\n          }\r\n        } else if (['p', 'padding', 'm', 'margin'].indexOf(key) !== -1 && typeof value === 'number') {\r\n          sxObject[key] = theme.spacing(value);\r\n        } else {\r\n          sxObject[key] = value;\r\n        }\r\n      } else if (typeof value === 'function') {\r\n        sxObject[key] = value(theme);\r\n      } else {\r\n        sxObject[key] = undefined;\r\n      }\r\n    });\r\n  }\r\n  return sxObject;\r\n};"],
  "mappings": ";;;;;;AAAA;AAYO,IAAM,iBAAiB,CAAC;AAAA,EAC7B;AAAA,EACA;AACF,GAAG,SAAS;AACV,MAAI,WAAW,CAAC;AAChB,WAAS,UAAU,QAAQ;AACzB,QAAI,OAAO,WAAW,YAAY;AAChC,YAAM,SAAS,OAAO,KAAK;AAC3B,gBAAU,MAAM;AAAA,IAClB,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,aAAO,QAAQ,YAAU;AACvB,YAAI,OAAO,WAAW,WAAW;AAC/B,oBAAU,MAAM;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,IACH,WAAW,OAAO,WAAW,UAAU;AACrC,iBAAW,SAAS,CAAC,GAAG,UAAU,MAAM;AAAA,IAC1C;AAAA,EACF;AACA,MAAI,WAAW,IAAI;AACjB,cAAU,WAAW,EAAE;AACvB,SAAK,QAAQ,SAAO;AAjCxB;AAkCM,YAAM,QAAQ,SAAS,GAAG;AAC1B,UAAI,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AAC1D,YAAI,QAAQ,gBAAgB;AAC1B,cAAI,OAAO,UAAU,UAAU;AAC7B,qBAAS,GAAG,IAAI,GAAG,KAAK;AAAA,UAC1B,OAAO;AACL,qBAAS,GAAG,MAAI,WAAM,SAAN,mBAAY,OAAO,WAAU;AAAA,UAC/C;AAAA,QACF,WAAW,CAAC,KAAK,WAAW,KAAK,QAAQ,EAAE,QAAQ,GAAG,MAAM,MAAM,OAAO,UAAU,UAAU;AAC3F,mBAAS,GAAG,IAAI,MAAM,QAAQ,KAAK;AAAA,QACrC,OAAO;AACL,mBAAS,GAAG,IAAI;AAAA,QAClB;AAAA,MACF,WAAW,OAAO,UAAU,YAAY;AACtC,iBAAS,GAAG,IAAI,MAAM,KAAK;AAAA,MAC7B,OAAO;AACL,iBAAS,GAAG,IAAI;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AACT;",
  "names": []
}

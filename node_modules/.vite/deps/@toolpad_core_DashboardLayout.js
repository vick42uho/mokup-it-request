import {
  AuthenticationContext,
  BrandingContext,
  NavigationContext,
  PaletteModeContext,
  RouterContext,
  SessionContext,
  WindowContext
} from "./chunk-FOT2BCH7.js";
import {
  Avatar_default,
  Collapse_default,
  Drawer_default,
  ListItemButton_default,
  ListItem_default
} from "./chunk-26QPNNJZ.js";
import "./chunk-MG4NV72K.js";
import "./chunk-VT4OBWV4.js";
import "./chunk-JIKZIVYU.js";
import "./chunk-B2KWVOLU.js";
import "./chunk-DYVK2D5R.js";
import {
  ListItemIcon_default,
  ListItemText_default,
  ListSubheader_default,
  Tooltip_default
} from "./chunk-WDLWAOEV.js";
import "./chunk-GGNRRPQ4.js";
import "./chunk-N2GMKGYS.js";
import "./chunk-AUMYK53N.js";
import "./chunk-Q4CONIIW.js";
import "./chunk-YAKZMXMW.js";
import {
  Stack_default
} from "./chunk-G5KKHR6C.js";
import {
  List_default,
  Popover_default
} from "./chunk-Y6OMB6TE.js";
import "./chunk-DPYADP4M.js";
import "./chunk-SMOMSVJV.js";
import {
  Typography_default
} from "./chunk-RPIXKMKG.js";
import {
  Toolbar_default
} from "./chunk-YCZ4GP5G.js";
import "./chunk-T42KTMRG.js";
import {
  IconButton_default
} from "./chunk-PJMOO2YT.js";
import "./chunk-LI356QTO.js";
import "./chunk-PR6ZCO7G.js";
import "./chunk-JYRJUXWM.js";
import "./chunk-UXIDYALY.js";
import "./chunk-VNBLB33Y.js";
import "./chunk-QAOH623V.js";
import {
  Button_default
} from "./chunk-6JFXOPUG.js";
import "./chunk-72SBTJZV.js";
import "./chunk-VXWHECPJ.js";
import "./chunk-B6VGDO6L.js";
import "./chunk-OCFROH2Y.js";
import "./chunk-AYWIQAHX.js";
import "./chunk-DCRAPN7A.js";
import "./chunk-SILVH2JI.js";
import {
  Divider_default
} from "./chunk-DXXHJNRP.js";
import {
  AppBar_default
} from "./chunk-GR4FKYEW.js";
import "./chunk-NQRCKDZ3.js";
import {
  Box_default
} from "./chunk-ARPXKWCH.js";
import "./chunk-VX2V3JK5.js";
import "./chunk-FMFFUJ5P.js";
import {
  useTheme
} from "./chunk-2EBS55ZF.js";
import "./chunk-LJCIYYRT.js";
import "./chunk-DHHXQO5H.js";
import "./chunk-XWL67CXL.js";
import "./chunk-676HADHD.js";
import "./chunk-WW5F73JL.js";
import "./chunk-2HCUZSRR.js";
import "./chunk-UJ6RU4NA.js";
import {
  require_createSvgIcon
} from "./chunk-JIACYULC.js";
import "./chunk-OE3OK3GX.js";
import "./chunk-Y4MPRDD5.js";
import "./chunk-DSY2ZFSS.js";
import "./chunk-K2QRMZF4.js";
import "./chunk-OPLPDB7A.js";
import "./chunk-XCORA3WA.js";
import "./chunk-FRHABKTL.js";
import "./chunk-6CKRSX2D.js";
import "./chunk-PYGBFTNT.js";
import "./chunk-RYDQS53A.js";
import "./chunk-EAE7OVBS.js";
import "./chunk-7QSZQNXW.js";
import "./chunk-4SF7EI72.js";
import {
  styled_default
} from "./chunk-P6LTYGUJ.js";
import {
  require_interopRequireDefault
} from "./chunk-UZMFHA43.js";
import "./chunk-N6IDYGYY.js";
import "./chunk-6DSU3GJ5.js";
import "./chunk-QWZKDJNF.js";
import {
  require_prop_types
} from "./chunk-SOQPWUNN.js";
import {
  require_jsx_runtime
} from "./chunk-DFRVR3IJ.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-VEEUVK2K.js";

// node_modules/@mui/icons-material/DarkMode.js
var require_DarkMode = __commonJS({
  "node_modules/@mui/icons-material/DarkMode.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"
    }), "DarkMode");
  }
});

// node_modules/@mui/icons-material/LightMode.js
var require_LightMode = __commonJS({
  "node_modules/@mui/icons-material/LightMode.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"
    }), "LightMode");
  }
});

// node_modules/@mui/icons-material/ExpandLess.js
var require_ExpandLess = __commonJS({
  "node_modules/@mui/icons-material/ExpandLess.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
    }), "ExpandLess");
  }
});

// node_modules/@mui/icons-material/ExpandMore.js
var require_ExpandMore = __commonJS({
  "node_modules/@mui/icons-material/ExpandMore.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
    }), "ExpandMore");
  }
});

// node_modules/@mui/icons-material/Menu.js
var require_Menu = __commonJS({
  "node_modules/@mui/icons-material/Menu.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 18h18v-2H3zm0-5h18v-2H3zm0-7v2h18V6z"
    }), "Menu");
  }
});

// node_modules/@mui/icons-material/MenuOpen.js
var require_MenuOpen = __commonJS({
  "node_modules/@mui/icons-material/MenuOpen.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "M3 18h13v-2H3zm0-5h10v-2H3zm0-7v2h13V6zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5z"
    }), "MenuOpen");
  }
});

// node_modules/@mui/icons-material/Logout.js
var require_Logout = __commonJS({
  "node_modules/@mui/icons-material/Logout.js"(exports) {
    "use strict";
    "use client";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _jsxRuntime = require_jsx_runtime();
    var _default = exports.default = (0, _createSvgIcon.default)((0, _jsxRuntime.jsx)("path", {
      d: "m17 7-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z"
    }), "Logout");
  }
});

// node_modules/@toolpad/core/DashboardLayout/DashboardLayout.js
var React7 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var import_DarkMode = __toESM(require_DarkMode());
var import_LightMode = __toESM(require_LightMode());
var import_ExpandLess = __toESM(require_ExpandLess());
var import_ExpandMore = __toESM(require_ExpandMore());
var import_Menu = __toESM(require_Menu());
var import_MenuOpen = __toESM(require_MenuOpen());

// node_modules/@toolpad/utils/dist/hooks/useSsr.js
var React = __toESM(require_react());
function subscribe() {
  return () => {
  };
}
function getSnapshot() {
  return false;
}
function getServerSnapshot() {
  return true;
}
function useSsr() {
  return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
}

// node_modules/@toolpad/core/Account/Account.js
var React3 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_Logout = __toESM(require_Logout());

// node_modules/@toolpad/core/Account/SessionAvatar.js
var React2 = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
function SessionAvatar({
  session,
  ...props
}) {
  var _a, _b, _c;
  return (0, import_jsx_runtime.jsx)(Avatar_default, {
    src: ((_a = session.user) == null ? void 0 : _a.image) || "",
    alt: ((_b = session.user) == null ? void 0 : _b.name) || ((_c = session.user) == null ? void 0 : _c.email) || "",
    ...props
  });
}

// node_modules/@toolpad/core/Account/Account.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var _LogoutIcon;
function Account(props) {
  var _a, _b;
  const {
    slotProps,
    signInLabel = "Sign In",
    signOutLabel = "Sign Out"
  } = props;
  const session = React3.useContext(SessionContext);
  const [anchorEl, setAnchorEl] = React3.useState(null);
  const handleClick = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const handleClose = () => {
    setAnchorEl(null);
  };
  const open = Boolean(anchorEl);
  const popoverId = React3.useId();
  const id = open ? popoverId : void 0;
  const authentication = React3.useContext(AuthenticationContext);
  if (!authentication) {
    return null;
  }
  if (!(session == null ? void 0 : session.user)) {
    return (0, import_jsx_runtime2.jsx)(Button_default, {
      disableElevation: true,
      variant: "contained",
      color: "inherit",
      size: "small",
      ...slotProps == null ? void 0 : slotProps.signInButton,
      onClick: authentication.signIn,
      sx: {
        ...(_a = slotProps == null ? void 0 : slotProps.signInButton) == null ? void 0 : _a.sx,
        textTransform: "capitalize",
        filter: "opacity(0.9)",
        transition: "filter 0.2s ease-in",
        "&:hover": {
          filter: "opacity(1)"
        }
      },
      children: signInLabel
    });
  }
  return (0, import_jsx_runtime2.jsxs)(React3.Fragment, {
    children: [(0, import_jsx_runtime2.jsx)(IconButton_default, {
      "aria-describedby": id,
      onClick: handleClick,
      "aria-label": "Current User",
      ...slotProps == null ? void 0 : slotProps.iconButton,
      children: (0, import_jsx_runtime2.jsx)(SessionAvatar, {
        session,
        sx: {
          width: 32,
          height: 32,
          ...slotProps == null ? void 0 : slotProps.avatar
        }
      })
    }), (0, import_jsx_runtime2.jsx)(Popover_default, {
      id,
      open,
      anchorEl,
      onClose: handleClose,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "right"
      },
      children: (0, import_jsx_runtime2.jsxs)(Stack_default, {
        sx: {
          width: 350
        },
        children: [(0, import_jsx_runtime2.jsxs)(Stack_default, {
          direction: "row",
          sx: {
            px: 3,
            py: 2,
            borderBottom: 1,
            borderColor: "divider"
          },
          spacing: 2,
          children: [(0, import_jsx_runtime2.jsx)(SessionAvatar, {
            session,
            sx: {
              width: 48,
              height: 48
            }
          }), (0, import_jsx_runtime2.jsxs)(Stack_default, {
            children: [(0, import_jsx_runtime2.jsx)(Typography_default, {
              fontWeight: "bolder",
              children: session.user.name
            }), (0, import_jsx_runtime2.jsx)(Typography_default, {
              variant: "caption",
              children: session.user.email
            })]
          })]
        }), (0, import_jsx_runtime2.jsx)(Stack_default, {
          direction: "row",
          sx: {
            p: 1,
            justifyContent: "right"
          },
          children: (0, import_jsx_runtime2.jsx)(Button_default, {
            disabled: !authentication,
            variant: "contained",
            size: "small",
            disableElevation: true,
            color: "inherit",
            startIcon: _LogoutIcon || (_LogoutIcon = (0, import_jsx_runtime2.jsx)(import_Logout.default, {})),
            ...slotProps == null ? void 0 : slotProps.signOutButton,
            onClick: authentication == null ? void 0 : authentication.signOut,
            sx: {
              ...(_b = slotProps == null ? void 0 : slotProps.signOutButton) == null ? void 0 : _b.sx,
              textTransform: "capitalize",
              filter: "opacity(0.9)",
              transition: "filter 0.2s ease-in",
              "&:hover": {
                filter: "opacity(1)"
              }
            },
            children: signOutLabel || "Sign Out"
          })
        })]
      })
    })]
  });
}
true ? Account.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label for the sign in button.
   * @default 'Sign In'
   */
  signInLabel: import_prop_types.default.string,
  /**
   * The label for the sign out button.
   * @default 'Sign Out'
   */
  signOutLabel: import_prop_types.default.string,
  /**
   * Props to pass to the constituent components in the Account component.
   * @default {}
   * @example { signInButton: { color: 'primary' }, signOutButton: { color: 'secondary' } }
   */
  slotProps: import_prop_types.default.shape({
    avatar: import_prop_types.default.object,
    iconButton: import_prop_types.default.object,
    signInButton: import_prop_types.default.object,
    signOutButton: import_prop_types.default.object
  })
} : void 0;

// node_modules/@toolpad/core/shared/Link.js
var React4 = __toESM(require_react());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var Link = React4.forwardRef(function Link2(props, ref) {
  const {
    children,
    href,
    onClick,
    history,
    ...rest
  } = props;
  const routerContext = React4.useContext(RouterContext);
  const handleLinkClick = React4.useMemo(() => {
    if (!routerContext) {
      return onClick;
    }
    return (event) => {
      event.preventDefault();
      const url = new URL(event.currentTarget.href);
      routerContext.navigate(url.pathname, {
        history
      });
      onClick == null ? void 0 : onClick(event);
    };
  }, [routerContext, onClick, history]);
  return (0, import_jsx_runtime3.jsx)("a", {
    ref,
    href,
    ...rest,
    onClick: handleLinkClick,
    children
  });
});

// node_modules/@toolpad/core/DashboardLayout/ToolpadLogo.js
var React5 = __toESM(require_react());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _g;
var _path;
var _g2;
var _path2;
var _g3;
function ToolpadLogo({
  size = 40
}) {
  return (0, import_jsx_runtime4.jsxs)("svg", {
    width: size,
    height: size,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [_g || (_g = (0, import_jsx_runtime4.jsxs)("g", {
      mask: "url(#a)",
      children: [(0, import_jsx_runtime4.jsx)("path", {
        d: "M22.74 27.73v-7.6l6.64-3.79v7.6l-6.64 3.79Z",
        fill: "#007FFF"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "M16.1 23.93v-7.59l6.64 3.8v7.59l-6.65-3.8Z",
        fill: "#39F"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "m16.1 16.34 6.64-3.8 6.64 3.8-6.64 3.8-6.65-3.8Z",
        fill: "#A5D8FF"
      })]
    })), (0, import_jsx_runtime4.jsx)("mask", {
      id: "b",
      style: {
        maskType: "alpha"
      },
      maskUnits: "userSpaceOnUse",
      x: "8",
      y: "17",
      width: "14",
      height: "15",
      children: _path || (_path = (0, import_jsx_runtime4.jsx)("path", {
        d: "M8.5 22.3c0-1.05.56-2 1.46-2.53l3.75-2.14c.89-.5 1.98-.5 2.87 0l3.75 2.14a2.9 2.9 0 0 1 1.46 2.52v4.23c0 1.04-.56 2-1.46 2.52l-3.75 2.14c-.89.5-1.98.5-2.87 0l-3.75-2.14a2.9 2.9 0 0 1-1.46-2.52v-4.23Z",
        fill: "#D7DCE1"
      }))
    }), _g2 || (_g2 = (0, import_jsx_runtime4.jsxs)("g", {
      mask: "url(#b)",
      children: [(0, import_jsx_runtime4.jsx)("path", {
        d: "M15.14 32v-7.6l6.65-3.8v7.6L15.14 32Z",
        fill: "#007FFF"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "M8.5 28.2v-7.6l6.64 3.8V32L8.5 28.2Z",
        fill: "#39F"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "m8.5 20.6 6.64-3.79 6.65 3.8-6.65 3.8-6.64-3.8Z",
        fill: "#A5D8FF"
      })]
    })), (0, import_jsx_runtime4.jsx)("mask", {
      id: "c",
      style: {
        maskType: "alpha"
      },
      maskUnits: "userSpaceOnUse",
      x: "8",
      y: "4",
      width: "22",
      height: "20",
      children: _path2 || (_path2 = (0, import_jsx_runtime4.jsx)("path", {
        d: "M24.17 4.82a2.9 2.9 0 0 0-2.87 0L9.97 11.22a2.9 2.9 0 0 0-1.47 2.53v4.22c0 1.04.56 2 1.46 2.52l3.75 2.14c.89.5 1.98.5 2.87 0l11.33-6.42a2.9 2.9 0 0 0 1.47-2.52V9.48c0-1.04-.56-2-1.46-2.52l-3.75-2.14Z",
        fill: "#D7DCE1"
      }))
    }), _g3 || (_g3 = (0, import_jsx_runtime4.jsxs)("g", {
      mask: "url(#c)",
      children: [(0, import_jsx_runtime4.jsx)("path", {
        d: "M15.14 23.46v-7.6L29.38 7.8v7.59l-14.24 8.07Z",
        fill: "#007FFF"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "M8.5 19.66v-7.6l6.64 3.8v7.6l-6.64-3.8Z",
        fill: "#39F"
      }), (0, import_jsx_runtime4.jsx)("path", {
        d: "M8.5 12.07 22.74 4l6.64 3.8-14.24 8.06-6.64-3.8Z",
        fill: "#A5D8FF"
      })]
    }))]
  });
}

// node_modules/@toolpad/core/shared/navigation.js
var getItemKind = (item) => item.kind ?? "page";
var isPageItem = (item) => getItemKind(item) === "page";
var getItemTitle = (item) => {
  return isPageItem(item) ? item.title ?? item.segment ?? "" : item.title;
};
function getPageItemFullPath(basePath, navigationItem) {
  return `${basePath}${basePath && !navigationItem.segment ? "" : "/"}${navigationItem.segment ?? ""}`;
}
function hasSelectedNavigationChildren(navigationItem, basePath, pathname) {
  if (isPageItem(navigationItem) && navigationItem.children) {
    const navigationItemFullPath = getPageItemFullPath(basePath, navigationItem);
    return navigationItem.children.some((nestedNavigationItem) => {
      if (!isPageItem(nestedNavigationItem)) {
        return false;
      }
      if (nestedNavigationItem.children) {
        return hasSelectedNavigationChildren(nestedNavigationItem, navigationItemFullPath, pathname);
      }
      const nestedNavigationItemFullPath = getPageItemFullPath(navigationItemFullPath, nestedNavigationItem);
      return nestedNavigationItemFullPath === pathname;
    });
  }
  return false;
}

// node_modules/@toolpad/core/shared/branding.js
var React6 = __toESM(require_react());
function useApplicationTitle() {
  const branding = React6.useContext(BrandingContext);
  return (branding == null ? void 0 : branding.title) ?? "Toolpad";
}

// node_modules/@toolpad/core/DashboardLayout/DashboardLayout.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var _DarkModeIcon;
var _LightModeIcon;
var _ExpandLessIcon;
var _ExpandMoreIcon;
var _Toolbar;
var _MenuOpenIcon;
var _MenuIcon;
var _ToolpadLogo;
var _ThemeSwitcher;
var _Account;
var _Toolbar2;
var DRAWER_WIDTH = 320;
var AppBar = styled_default(AppBar_default)(({
  theme
}) => ({
  borderWidth: 0,
  borderBottomWidth: 1,
  borderStyle: "solid",
  borderColor: (theme.vars ?? theme).palette.divider,
  boxShadow: "none",
  // TODO: Temporary fix to issue reported in https://github.com/mui/material-ui/issues/43244
  left: 0,
  zIndex: theme.zIndex.drawer + 1
}));
var LogoContainer = styled_default("div")({
  position: "relative",
  height: 40,
  "& img": {
    maxHeight: 40
  }
});
var NavigationListItemButton = styled_default(ListItemButton_default)(({
  theme
}) => ({
  borderRadius: 8,
  "&.Mui-selected": {
    "& .MuiListItemIcon-root": {
      color: (theme.vars ?? theme).palette.primary.dark
    },
    "& .MuiTypography-root": {
      color: (theme.vars ?? theme).palette.primary.dark
    },
    "& .MuiSvgIcon-root": {
      color: (theme.vars ?? theme).palette.primary.dark
    },
    "& .MuiTouchRipple-child": {
      backgroundColor: (theme.vars ?? theme).palette.primary.dark
    }
  },
  "& .MuiSvgIcon-root": {
    color: (theme.vars ?? theme).palette.action.active
  }
}));
function ThemeSwitcher() {
  const isSsr = useSsr();
  const theme = useTheme();
  const {
    paletteMode,
    setPaletteMode,
    isDualTheme
  } = React7.useContext(PaletteModeContext);
  const toggleMode = React7.useCallback(() => {
    setPaletteMode(paletteMode === "dark" ? "light" : "dark");
  }, [paletteMode, setPaletteMode]);
  return isDualTheme ? (0, import_jsx_runtime5.jsx)(Tooltip_default, {
    title: isSsr ? "Switch mode" : `${paletteMode === "dark" ? "Light" : "Dark"} mode`,
    enterDelay: 1e3,
    children: (0, import_jsx_runtime5.jsx)("div", {
      children: (0, import_jsx_runtime5.jsx)(IconButton_default, {
        "aria-label": isSsr ? "Switch theme mode" : `Switch to ${paletteMode === "dark" ? "light" : "dark"} mode`,
        onClick: toggleMode,
        sx: {
          color: (theme.vars ?? theme).palette.primary.dark,
          padding: 1,
          marginRight: 1
        },
        children: theme.getColorSchemeSelector ? (0, import_jsx_runtime5.jsxs)(React7.Fragment, {
          children: [(0, import_jsx_runtime5.jsx)(import_DarkMode.default, {
            sx: {
              display: "inline",
              [theme.getColorSchemeSelector("dark")]: {
                display: "none"
              }
            }
          }), (0, import_jsx_runtime5.jsx)(import_LightMode.default, {
            sx: {
              display: "none",
              [theme.getColorSchemeSelector("dark")]: {
                display: "inline"
              }
            }
          })]
        }) : (0, import_jsx_runtime5.jsx)(React7.Fragment, {
          children: isSsr || paletteMode !== "dark" ? _DarkModeIcon || (_DarkModeIcon = (0, import_jsx_runtime5.jsx)(import_DarkMode.default, {})) : _LightModeIcon || (_LightModeIcon = (0, import_jsx_runtime5.jsx)(import_LightMode.default, {}))
        })
      })
    })
  }) : null;
}
function DashboardSidebarSubNavigation({
  subNavigation,
  basePath = "",
  depth = 0,
  onLinkClick,
  validatedItemIds,
  uniqueItemPaths
}) {
  const routerContext = React7.useContext(RouterContext);
  const pathname = (routerContext == null ? void 0 : routerContext.pathname) ?? "/";
  const initialExpandedSidebarItemIds = React7.useMemo(() => subNavigation.map((navigationItem, navigationItemIndex) => ({
    navigationItem,
    originalIndex: navigationItemIndex
  })).filter(({
    navigationItem
  }) => hasSelectedNavigationChildren(navigationItem, basePath, pathname)).map(({
    originalIndex
  }) => `${depth}-${originalIndex}`), [basePath, depth, pathname, subNavigation]);
  const [expandedSidebarItemIds, setExpandedSidebarItemIds] = React7.useState(initialExpandedSidebarItemIds);
  const handleOpenFolderClick = React7.useCallback((itemId) => () => {
    setExpandedSidebarItemIds((previousValue) => previousValue.includes(itemId) ? previousValue.filter((previousValueItemId) => previousValueItemId !== itemId) : [...previousValue, itemId]);
  }, []);
  return (0, import_jsx_runtime5.jsx)(List_default, {
    sx: {
      padding: 0,
      mb: depth === 0 ? 4 : 1,
      pl: 2 * depth
    },
    children: subNavigation.map((navigationItem, navigationItemIndex) => {
      if (navigationItem.kind === "header") {
        return (0, import_jsx_runtime5.jsx)(ListSubheader_default, {
          component: "div",
          sx: {
            fontSize: 12,
            fontWeight: "700",
            height: 40,
            pl: 4
          },
          children: getItemTitle(navigationItem)
        }, `subheader-${depth}-${navigationItemIndex}`);
      }
      if (navigationItem.kind === "divider") {
        const nextItem = subNavigation[navigationItemIndex + 1];
        return (0, import_jsx_runtime5.jsx)(Divider_default, {
          sx: {
            borderBottomWidth: 2,
            mx: 2,
            mt: 1,
            mb: (nextItem == null ? void 0 : nextItem.kind) === "header" ? 0 : 1
          }
        }, `divider-${depth}-${navigationItemIndex}`);
      }
      const navigationItemFullPath = getPageItemFullPath(basePath, navigationItem);
      const navigationItemId = `${depth}-${navigationItemIndex}`;
      const isNestedNavigationExpanded = expandedSidebarItemIds.includes(navigationItemId);
      const nestedNavigationCollapseIcon = isNestedNavigationExpanded ? _ExpandLessIcon || (_ExpandLessIcon = (0, import_jsx_runtime5.jsx)(import_ExpandLess.default, {})) : _ExpandMoreIcon || (_ExpandMoreIcon = (0, import_jsx_runtime5.jsx)(import_ExpandMore.default, {}));
      const listItem = (0, import_jsx_runtime5.jsx)(ListItem_default, {
        sx: {
          pt: 0,
          pb: 0
        },
        children: (0, import_jsx_runtime5.jsxs)(NavigationListItemButton, {
          selected: pathname === navigationItemFullPath && !navigationItem.children,
          ...navigationItem.children ? {
            onClick: handleOpenFolderClick(navigationItemId)
          } : {
            LinkComponent: Link,
            href: navigationItemFullPath,
            onClick: onLinkClick
          },
          children: [navigationItem.icon ? (0, import_jsx_runtime5.jsx)(ListItemIcon_default, {
            sx: {
              minWidth: 34
            },
            children: navigationItem.icon
          }) : null, (0, import_jsx_runtime5.jsx)(ListItemText_default, {
            primary: getItemTitle(navigationItem),
            sx: {
              "& .MuiTypography-root": {
                fontWeight: "500"
              }
            }
          }), navigationItem.action ?? null, navigationItem.children ? nestedNavigationCollapseIcon : null]
        })
      });
      if (!validatedItemIds.has(navigationItemId)) {
        if (!uniqueItemPaths.has(navigationItemFullPath)) {
          uniqueItemPaths.add(navigationItemFullPath);
        } else {
          console.warn(`Duplicate path in navigation: ${navigationItemFullPath}`);
        }
        validatedItemIds.add(navigationItemId);
      }
      return (0, import_jsx_runtime5.jsxs)(React7.Fragment, {
        children: [listItem, navigationItem.children ? (0, import_jsx_runtime5.jsx)(Collapse_default, {
          in: isNestedNavigationExpanded,
          timeout: "auto",
          unmountOnExit: true,
          children: (0, import_jsx_runtime5.jsx)(DashboardSidebarSubNavigation, {
            subNavigation: navigationItem.children,
            basePath: navigationItemFullPath,
            depth: depth + 1,
            onLinkClick,
            validatedItemIds,
            uniqueItemPaths
          })
        }) : null]
      }, navigationItemId);
    })
  });
}
function DashboardLayout(props) {
  var _a;
  const {
    children
  } = props;
  const branding = React7.useContext(BrandingContext);
  const navigation = React7.useContext(NavigationContext);
  const appWindow = React7.useContext(WindowContext);
  const applicationTitle = useApplicationTitle();
  const [isMobileNavigationOpen, setIsMobileNavigationOpen] = React7.useState(false);
  const validatedItemIdsRef = React7.useRef(/* @__PURE__ */ new Set());
  const uniqueItemPathsRef = React7.useRef(/* @__PURE__ */ new Set());
  const handleSetMobileNavigationOpen = React7.useCallback((newOpen) => () => {
    setIsMobileNavigationOpen(newOpen);
  }, []);
  const toggleMobileNavigation = React7.useCallback(() => {
    setIsMobileNavigationOpen((previousOpen) => !previousOpen);
  }, []);
  const handleNavigationLinkClick = React7.useCallback(() => {
    setIsMobileNavigationOpen(false);
  }, []);
  React7.useMemo(() => {
    validatedItemIdsRef.current = /* @__PURE__ */ new Set();
    uniqueItemPathsRef.current = /* @__PURE__ */ new Set();
  }, [navigation]);
  const drawerContent = (0, import_jsx_runtime5.jsxs)(React7.Fragment, {
    children: [_Toolbar || (_Toolbar = (0, import_jsx_runtime5.jsx)(Toolbar_default, {})), (0, import_jsx_runtime5.jsx)(Box_default, {
      component: "nav",
      sx: {
        overflow: "auto",
        pt: ((_a = navigation[0]) == null ? void 0 : _a.kind) === "header" ? 0 : 2
      },
      children: (0, import_jsx_runtime5.jsx)(DashboardSidebarSubNavigation, {
        subNavigation: navigation,
        onLinkClick: handleNavigationLinkClick,
        validatedItemIds: validatedItemIdsRef.current,
        uniqueItemPaths: uniqueItemPathsRef.current
      })
    })]
  });
  return (0, import_jsx_runtime5.jsxs)(Box_default, {
    sx: {
      display: "flex"
    },
    children: [(0, import_jsx_runtime5.jsx)(AppBar, {
      color: "inherit",
      position: "fixed",
      children: (0, import_jsx_runtime5.jsxs)(Toolbar_default, {
        sx: {
          backgroundColor: "inherit",
          minWidth: "100vw"
        },
        children: [(0, import_jsx_runtime5.jsx)(Box_default, {
          sx: {
            display: {
              xs: "block",
              md: "none"
            }
          },
          children: (0, import_jsx_runtime5.jsx)(Tooltip_default, {
            title: `${isMobileNavigationOpen ? "Close" : "Open"} menu`,
            placement: "right",
            enterDelay: 1e3,
            children: (0, import_jsx_runtime5.jsx)("div", {
              children: (0, import_jsx_runtime5.jsx)(IconButton_default, {
                "aria-label": `${isMobileNavigationOpen ? "Close" : "Open"} navigation menu`,
                onClick: toggleMobileNavigation,
                edge: "start",
                sx: {
                  ml: 0
                },
                children: isMobileNavigationOpen ? _MenuOpenIcon || (_MenuOpenIcon = (0, import_jsx_runtime5.jsx)(import_MenuOpen.default, {})) : _MenuIcon || (_MenuIcon = (0, import_jsx_runtime5.jsx)(import_Menu.default, {}))
              })
            })
          })
        }), (0, import_jsx_runtime5.jsx)(Box_default, {
          sx: {
            position: {
              xs: "absolute",
              md: "static"
            },
            left: {
              xs: "50%",
              md: "auto"
            },
            transform: {
              xs: "translateX(-50%)",
              md: "none"
            }
          },
          children: (0, import_jsx_runtime5.jsx)(Link, {
            href: "/",
            style: {
              color: "inherit",
              textDecoration: "none"
            },
            children: (0, import_jsx_runtime5.jsxs)(Stack_default, {
              direction: "row",
              alignItems: "center",
              children: [(0, import_jsx_runtime5.jsx)(LogoContainer, {
                children: (branding == null ? void 0 : branding.logo) ?? (_ToolpadLogo || (_ToolpadLogo = (0, import_jsx_runtime5.jsx)(ToolpadLogo, {
                  size: 40
                })))
              }), (0, import_jsx_runtime5.jsx)(Typography_default, {
                variant: "h6",
                sx: {
                  color: (theme) => (theme.vars ?? theme).palette.primary.main,
                  fontWeight: "700",
                  ml: 0.5
                },
                children: applicationTitle
              })]
            })
          })
        }), (0, import_jsx_runtime5.jsx)(Box_default, {
          sx: {
            flexGrow: 1
          }
        }), _ThemeSwitcher || (_ThemeSwitcher = (0, import_jsx_runtime5.jsx)(ThemeSwitcher, {})), _Account || (_Account = (0, import_jsx_runtime5.jsx)(Account, {}))]
      })
    }), (0, import_jsx_runtime5.jsx)(Drawer_default, {
      container: appWindow == null ? void 0 : appWindow.document.body,
      variant: "temporary",
      open: isMobileNavigationOpen,
      onClose: handleSetMobileNavigationOpen(false),
      ModalProps: {
        keepMounted: true
        // Better open performance on mobile.
      },
      sx: {
        display: {
          xs: "block",
          md: "none"
        },
        width: DRAWER_WIDTH,
        flexShrink: 0,
        [`& .MuiDrawer-paper`]: {
          width: DRAWER_WIDTH,
          boxSizing: "border-box",
          backgroundImage: "none",
          borderRight: (theme) => `1px solid ${(theme.vars ?? theme).palette.divider}`
        }
      },
      children: drawerContent
    }), (0, import_jsx_runtime5.jsx)(Drawer_default, {
      variant: "permanent",
      sx: {
        display: {
          xs: "none",
          md: "block"
        },
        width: DRAWER_WIDTH,
        flexShrink: 0,
        [`& .MuiDrawer-paper`]: {
          width: DRAWER_WIDTH,
          boxSizing: "border-box",
          backgroundImage: "none"
        }
      },
      children: drawerContent
    }), (0, import_jsx_runtime5.jsxs)(Box_default, {
      component: "main",
      sx: {
        flexGrow: 1,
        // TODO: Temporary fix to issue reported in https://github.com/mui/material-ui/issues/43244
        minWidth: {
          xs: isMobileNavigationOpen ? "100vw" : "auto",
          md: "auto"
        }
      },
      children: [_Toolbar2 || (_Toolbar2 = (0, import_jsx_runtime5.jsx)(Toolbar_default, {})), children]
    })]
  });
}
true ? DashboardLayout.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the dashboard.
   */
  children: import_prop_types2.default.node
} : void 0;
export {
  DashboardLayout
};
//# sourceMappingURL=@toolpad_core_DashboardLayout.js.map

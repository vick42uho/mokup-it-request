"use client";
import {
  stepClasses_default
} from "./chunk-DGLWTK6O.js";
import {
  stepperClasses_default
} from "./chunk-TCEVVTWH.js";
import {
  useSlot
} from "./chunk-ZKLFHDNF.js";
import "./chunk-IMGQD2EJ.js";
import {
  styled_default,
  useThemeProps
} from "./chunk-QOTTMFH5.js";
import {
  generateUtilityClass2 as generateUtilityClass,
  generateUtilityClasses2 as generateUtilityClasses
} from "./chunk-B6LWP2E4.js";
import "./chunk-2HCUZSRR.js";
import "./chunk-QWZKDJNF.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  clsx_default,
  init_clsx,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-SOQPWUNN.js";
import {
  require_jsx_runtime
} from "./chunk-DFRVR3IJ.js";
import {
  __toESM,
  require_react
} from "./chunk-VEEUVK2K.js";

// node_modules/@mui/joy/StepButton/StepButton.js
init_extends();
init_objectWithoutPropertiesLoose();
var React = __toESM(require_react());
init_clsx();
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/joy/StepButton/stepButtonClasses.js
function getStepButtonUtilityClass(slot) {
  return generateUtilityClass("MuiStepButton", slot);
}
var stepButtonClasses = generateUtilityClasses("MuiStepButton", ["root"]);
var stepButtonClasses_default = stepButtonClasses;

// node_modules/@mui/joy/StepButton/StepButton.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["className", "component", "children", "slots", "slotProps"];
var StepButtonRoot = styled_default("button", {
  name: "JoyStepButton",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme
}) => {
  return {
    [`.${stepClasses_default.indicator}:empty + &`]: {
      "--StepIndicator-size": "0px",
      "--Step-gap": "0px"
    },
    [`.${stepClasses_default.horizontal} &`]: {
      "--_StepButton-alignSelf": "stretch",
      "--_StepButton-gap": "var(--Step-gap)"
    },
    [`.${stepClasses_default.horizontal} &::before`]: {
      "--_StepButton-left": "calc(-1 * (var(--StepIndicator-size) + var(--Step-gap)))"
    },
    [`.${stepClasses_default.vertical} &::before`]: {
      "--_StepButton-top": "calc(-1 * (var(--StepIndicator-size) + var(--Step-gap)))"
    },
    [`.${stepperClasses_default.vertical} .${stepClasses_default.vertical} &`]: {
      "--_StepButton-alignItems": "flex-start"
    },
    [`.${stepperClasses_default.vertical} &::before`]: {
      "--_StepButton-left": "calc(-1 * (var(--StepIndicator-size) + var(--Step-gap)))",
      "--_StepButton-top": "0px"
    },
    WebkitTapHighlightColor: "transparent",
    boxSizing: "border-box",
    border: "none",
    backgroundColor: "transparent",
    cursor: "pointer",
    position: "relative",
    padding: 0,
    textDecoration: "none",
    // prevent user agent underline when used as anchor
    font: "inherit",
    display: "inline-flex",
    flexDirection: "inherit",
    alignItems: "var(--_StepButton-alignItems, inherit)",
    alignSelf: "var(--_StepButton-alignSelf)",
    gap: "var(--_StepButton-gap)",
    [theme.focus.selector]: theme.focus.default,
    "&::before": {
      content: '""',
      display: "block",
      position: "absolute",
      top: "var(--_StepButton-top, 0)",
      right: 0,
      bottom: 0,
      left: "var(--_StepButton-left, 0)"
    }
  };
});
var StepButton = React.forwardRef(function StepButton2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "JoyStepButton"
  });
  const {
    className,
    component = "button",
    children,
    slots = {},
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const ownerState = _extends({}, props, {
    component
  });
  const externalForwardedProps = _extends({}, other, {
    component,
    slots,
    slotProps
  });
  const [SlotRoot, rootProps] = useSlot("root", {
    ref,
    className: clsx_default(stepButtonClasses_default.root, className),
    elementType: StepButtonRoot,
    externalForwardedProps,
    ownerState,
    additionalProps: {
      type: "button"
    }
  });
  return (0, import_jsx_runtime.jsx)(SlotRoot, _extends({}, rootProps, {
    children
  }));
});
true ? StepButton.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used to render icon or text elements inside the StepButton if `src` is not set.
   * This can be an element, or just a string.
   */
  children: import_prop_types.default.node,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types.default.shape({
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: import_prop_types.default.shape({
    root: import_prop_types.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
var StepButton_default = StepButton;
export {
  StepButton_default as default,
  getStepButtonUtilityClass,
  stepButtonClasses_default as stepButtonClasses
};
//# sourceMappingURL=@mui_joy_StepButton.js.map

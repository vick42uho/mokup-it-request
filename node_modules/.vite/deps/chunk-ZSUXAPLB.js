import {
  useSlot
} from "./chunk-67R4TDGQ.js";
import {
  styled_default,
  useThemeProps
} from "./chunk-2KKR5LVU.js";
import {
  capitalize,
  composeClasses,
  generateUtilityClass2 as generateUtilityClass,
  generateUtilityClasses2 as generateUtilityClasses
} from "./chunk-T54BCNI5.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  clsx_default,
  init_clsx,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-VFD7MG3A.js";
import {
  require_jsx_runtime
} from "./chunk-DFRVR3IJ.js";
import {
  __toESM,
  require_react
} from "./chunk-VEEUVK2K.js";

// node_modules/@mui/joy/StepIndicator/StepIndicator.js
init_objectWithoutPropertiesLoose();
init_extends();
var React = __toESM(require_react());
init_clsx();
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/joy/StepIndicator/stepIndicatorClasses.js
function getStepIndicatorUtilityClass(slot) {
  return generateUtilityClass("MuiStepIndicator", slot);
}
var stepIndicatorClasses = generateUtilityClasses("MuiStepIndicator", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorSuccess", "colorWarning", "colorContext", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "horizontal", "vertical"]);
var stepIndicatorClasses_default = stepIndicatorClasses;

// node_modules/@mui/joy/StepIndicator/StepIndicator.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["className", "component", "color", "children", "variant", "slots", "slotProps"];
var useUtilityClasses = (ownerState) => {
  const {
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`]
  };
  return composeClasses(slots, getStepIndicatorUtilityClass, {});
};
var StepIndicatorRoot = styled_default("div", {
  name: "JoyStepIndicator",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _a;
  return _extends({
    "--Icon-fontSize": "calc(var(--StepIndicator-size, 2rem) / 2)",
    "--Icon-color": "currentColor",
    boxSizing: "border-box",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    font: "inherit",
    borderRadius: "50%",
    width: "var(--StepIndicator-size, 1.5rem)",
    height: "var(--StepIndicator-size, 1.5rem)"
  }, (_a = theme.variants[ownerState.variant]) == null ? void 0 : _a[ownerState.color]);
});
var StepIndicator = React.forwardRef(function StepIndicator2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "JoyStepIndicator"
  });
  const {
    className,
    component = "div",
    color = "neutral",
    children,
    variant = "soft",
    slots = {},
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const ownerState = _extends({}, props, {
    component,
    color,
    variant
  });
  const classes = useUtilityClasses(ownerState);
  const externalForwardedProps = _extends({}, other, {
    component,
    slots,
    slotProps
  });
  const [SlotRoot, rootProps] = useSlot("root", {
    ref,
    className: clsx_default(classes.root, className),
    elementType: StepIndicatorRoot,
    externalForwardedProps,
    ownerState
  });
  return (0, import_jsx_runtime.jsx)(SlotRoot, _extends({}, rootProps, {
    children
  }));
});
true ? StepIndicator.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used to render icon or text elements inside the StepIndicator if `src` is not set.
   * This can be an element, or just a string.
   */
  children: import_prop_types.default.node,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'neutral'
   */
  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["danger", "neutral", "primary", "success", "warning"]), import_prop_types.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types.default.shape({
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: import_prop_types.default.shape({
    root: import_prop_types.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
  /**
   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.
   * @default 'soft'
   */
  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types.default.string])
} : void 0;
var StepIndicator_default = StepIndicator;

export {
  getStepIndicatorUtilityClass,
  stepIndicatorClasses_default,
  StepIndicator_default
};
//# sourceMappingURL=chunk-ZSUXAPLB.js.map
